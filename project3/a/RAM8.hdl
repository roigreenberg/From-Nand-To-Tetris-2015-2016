// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // set the value specified by in to certain register according the address
    DMux8Way(in=load, sel=address, a=load1, b=load2, c=load3, d=load4, e=load5, f=load6, g=load7, h=load8);
    // do registers to all the eight
    Register(in=in, out=reg1, load=load1);
    Register(in=in, out=reg2, load=load2);
    Register(in=in, out=reg3, load=load3);
    Register(in=in, out=reg4, load=load4);
    Register(in=in, out=reg5, load=load5);
    Register(in=in, out=reg6, load=load6);
    Register(in=in, out=reg7, load=load7);
    Register(in=in, out=reg8, load=load8);
    // output the selected register value
    Mux8Way16(a=reg1, b=reg2, c=reg3, d=reg4, e=reg5, f=reg6, g=reg7, h=reg8, sel=address, out=out);
}
