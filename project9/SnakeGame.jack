

class SnakeGame {

    // The Snake
    field Snake snake;
	//field List body;
	field boolean cont;
	field char key;
	field int fx;
	field int score;

	
	

    // The snake's movement direction
    field int direction; // 0=none,1=up,2=down,3=left,4=right

    /** Constructs a new Snake Game. */
    constructor SnakeGame new() {
		let cont = true;
        let direction = 0;
		let score = 0;

        return this;
    }

    /** Deallocates the object's memory. */
    method void dispose() {
        do snake.dispose();
        do Memory.deAlloc(this);
        return;
    }
	
	method void delay(int speed) {
		var int time1, time2;
		var char tempKey;
		if (speed < 0){
			let speed = 1;
		}
		if (speed > 9) {
			let speed = 10;
		}
		let time1 = 1000/speed;
		let time2 = 1000/speed;
	
		while (time1 > 0) {
			while (time2 > 0) {
				let tempKey = Keyboard.keyPressed();
				if (~(tempKey = 0)) {
					let key = tempKey;
				}
				let time2 = time2 - 1;
			}
			let time1 = time1 - 1;
		}
		return;
	}
	
	method void game() {
		
		var boolean cont;
		var int i;
		let cont = true;
		
	
		let cont = false;
		do printStart();
		let snake = Snake.new(267,127);
		
		while (key = 0) {
			let key = Keyboard.keyPressed();
		}
		
		let i = 0;
		while (i < 30) {
			do Output.moveCursor(5,25+i);
			let i = i + 1;
		}
		
		
		do run(snake, (key - 47));
		do snake.dispose();			
		
		return;
	}

    method void run(Snake s, int speed) {
        
        var boolean exit;
        var int direction;
		var boolean cont, hit;
        let direction = 0;
        let exit = false;

        while (~exit) {

			
            // waits for a key to be pressed.
            while (key = 0) {
                let key = Keyboard.keyPressed();
				do delay(speed);
                if(~(s.move(direction))){
					do Output.moveCursor(10,25);
					do Output.printString("Game Over :(");
					return;
				}
				do Output.moveCursor(0,38);
				do Output.moveCursor(0,37);
				do Output.moveCursor(0,36);
				do Output.printInt(s[5]);
				
            }
			
            if (key = 140) {
                let exit = true;
            }
            if (key = 131) {
                let direction = 0;
            }
            if (key = 133) {
                let direction = 1;
            }
            if (key = 130) {
                let direction = 2;
            }
            if (key = 132) {
                let direction = 3;
            }

            // waits for the key to be released.
            while (~(key = 0)) {
                let key = Keyboard.keyPressed();
				do delay(speed);
				
                if(~(s.move(direction))){
					do Output.moveCursor(10,25);
					do Output.printString("Game Over :(");
					return;
				}
				do Output.moveCursor(0,38);
				do Output.moveCursor(0,37);
				do Output.moveCursor(0,36);
				do Output.printInt(s[5]);
            }
        }

        return;
	}
	
	method void printStart(){
		do Screen.clearScreen();
		do Screen.setColor(true);
		do Screen.drawLine(15, 15, 15, 240);
		do Screen.drawLine(500, 15, 500, 240);
		do Screen.drawLine(15, 15, 500, 15);
		do Screen.drawLine(15, 240, 500, 240);
		do Output.moveCursor(5,25);
		do Output.printString("Please choose speed (0-9):");
		do Output.moveCursor(0,30);
		do Output.printString("Score:");


		return;
	}
	


}