


class Snake {
	field int x;
	field int y;
	field int curDir;
	field List body;
	field Food food;
	field int count, grow;

	constructor Snake new(int X, int Y) {
	    let x = X;
	    let y = Y;
	    let curDir = 0;
		let count = 0;
		let grow = 0;
	    let body = List.new(x,y);
		let food = Food.new();

		//do Screen.setColor(true);
        //do Screen.drawPixel(x, y);
	    return this;
	}
	
	method void dispose() {
        do body.dispose();
		do food.dispose();
        do Memory.deAlloc(this);
        return;
    }
	
	
    method boolean move(String dir) {
    	if (dir = 0) {
    		if (~(curDir = 1)) {
    			let y = y - 1;
				let curDir = dir;
    		}
			else {
    			let y = y + 1;
    		}
    	}
    	if (dir = 1) {
    		if (~(curDir = 0)) {
    			let y = y + 1;
				let curDir = dir;
    		}
			else {
    			let y = y - 1;
    		}
    	}
    	if (dir = 3) {
    		if (~(curDir = 2)) {
    			let x = x + 1;
				let curDir = dir;
    		}
			else {
    			let x = x - 1;
    		}
    	}
    	if (dir = 2) {
    		if (~(curDir = 3)) {
    			let x = x - 1;
				let curDir = dir;
    		}
			else {
    			let x = x + 1;
    		}
			
    	}


		if (x = 15) {
			return false;
		}
		if (x = 500) {
			return false;
		}
		if (y = 15) {
			return false;
		}
		if (y = 240) {
			return false;
		}
		if (body.isInList(x,y)){
			return false;
		}
		do body.newLink(x,y);
		if (hit()) {
			let count = count + 1;
			let grow = 10;
    		do food.next();
    	} else {
			if(grow > 0){
				let grow = grow - 1;
			} else {
				do body.removeLink();
			}
			
		}
    	return true;
    }
	
	method boolean hit() {
		
		return food.hit(x,y);
	}

}